<?php
/**
 * PriceModificationReceiptsV3
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * OTTO Market API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.69
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace cbdesk\otto\Client\Model;

use ArrayAccess;
use cbdesk\otto\Client\ObjectSerializer;

/**
 * PriceModificationReceiptsV3 Class Doc Comment
 *
 * @category Class
 * @description List of additional fees and reductions represented as price modifications. &lt;/br&gt;If there are no price modifications, an empty list is displayed
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class PriceModificationReceiptsV3 implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'PriceModification__Receipts-V3';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'line_number' => 'int',
        'price_modification_type' => 'string',
        'details' => '\cbdesk\otto\Client\Model\DetailsReceiptsV3',
        'price_modification_amount' => '\cbdesk\otto\Client\Model\PriceReceiptsV3'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'line_number' => 'int32',
        'price_modification_type' => null,
        'details' => null,
        'price_modification_amount' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'line_number' => 'lineNumber',
        'price_modification_type' => 'priceModificationType',
        'details' => 'details',
        'price_modification_amount' => 'priceModificationAmount'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'line_number' => 'setLineNumber',
        'price_modification_type' => 'setPriceModificationType',
        'details' => 'setDetails',
        'price_modification_amount' => 'setPriceModificationAmount'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'line_number' => 'getLineNumber',
        'price_modification_type' => 'getPriceModificationType',
        'details' => 'getDetails',
        'price_modification_amount' => 'getPriceModificationAmount'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    const PRICE_MODIFICATION_TYPE_PARTNER_DISCOUNT = 'PARTNER_DISCOUNT';
    const PRICE_MODIFICATION_TYPE_DEFECT_COMPENSATION = 'DEFECT_COMPENSATION';
    const PRICE_MODIFICATION_TYPE_REFUND_COMPLAINT_ITEM = 'REFUND_COMPLAINT_ITEM';
    const PRICE_MODIFICATION_TYPE_REFUND_PAYPAL_DISPUTE = 'REFUND_PAYPAL_DISPUTE';
    const PRICE_MODIFICATION_TYPE_REFUND_ESCALATION = 'REFUND_ESCALATION';
    const PRICE_MODIFICATION_TYPE_REFUND_PARTIAL_AMOUNT_AFTER_SERVICE_CANCELLATION = 'REFUND_PARTIAL_AMOUNT_AFTER_SERVICE_CANCELLATION';
    const PRICE_MODIFICATION_TYPE_REFUND_CREDIT_CARD_DISPUTE = 'REFUND_CREDIT_CARD_DISPUTE';

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getPriceModificationTypeAllowableValues()
    {
        return [
            self::PRICE_MODIFICATION_TYPE_PARTNER_DISCOUNT,
            self::PRICE_MODIFICATION_TYPE_DEFECT_COMPENSATION,
            self::PRICE_MODIFICATION_TYPE_REFUND_COMPLAINT_ITEM,
            self::PRICE_MODIFICATION_TYPE_REFUND_PAYPAL_DISPUTE,
            self::PRICE_MODIFICATION_TYPE_REFUND_ESCALATION,
            self::PRICE_MODIFICATION_TYPE_REFUND_PARTIAL_AMOUNT_AFTER_SERVICE_CANCELLATION,
            self::PRICE_MODIFICATION_TYPE_REFUND_CREDIT_CARD_DISPUTE,
        ];
    }

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['line_number'] = isset($data['line_number']) ? $data['line_number'] : null;
        $this->container['price_modification_type'] = isset($data['price_modification_type']) ? $data['price_modification_type'] : null;
        $this->container['details'] = isset($data['details']) ? $data['details'] : null;
        $this->container['price_modification_amount'] = isset($data['price_modification_amount']) ? $data['price_modification_amount'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['price_modification_type'] === null) {
            $invalidProperties[] = "'price_modification_type' can't be null";
        }
        $allowedValues = $this->getPriceModificationTypeAllowableValues();
        if (!is_null($this->container['price_modification_type']) && !in_array($this->container['price_modification_type'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'price_modification_type', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        if ($this->container['details'] === null) {
            $invalidProperties[] = "'details' can't be null";
        }
        if ($this->container['price_modification_amount'] === null) {
            $invalidProperties[] = "'price_modification_amount' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets line_number
     *
     * @return int
     */
    public function getLineNumber()
    {
        return $this->container['line_number'];
    }

    /**
     * Sets line_number
     *
     * @param int $line_number Number of line item in which the information is printed on the pdf document of the receipt. </br>On the pdf documents increases and decreases do not necessarily have to be shown on the same line. If there is a discrepancy, it is visible by different line numbers of this object and the parent line item object </br>This information is not reliably provided for older receipts
     *
     * @return $this
     */
    public function setLineNumber($line_number)
    {
        $this->container['line_number'] = $line_number;

        return $this;
    }

    /**
     * Gets price_modification_type
     *
     * @return string
     */
    public function getPriceModificationType()
    {
        return $this->container['price_modification_type'];
    }

    /**
     * Sets price_modification_type
     *
     * @param string $price_modification_type This type describes the special increases or decreases in detail and how to deal with it.  The following priceModificationTypes are possible: * **PARTNER_DISCOUNT** - Partner-financed immediate discount granted to the customer at the time of purchase.</br>Reduction of parent object item position on PURCHASE and REFUND receipt * **DEFECT_COMPENSATION** / **REFUND_COMPLAINT_ITEM** - Partial refund already refunded by a partial refund receipt to compensate a defect.</br>Reduction of parent object item position on REFUND receipt * **REFUND_PAYPAL_DISPUTE** - Partial or full amount of item price was refunded due to a dispute in Paypal payment.</br>Reduction of parent object item or service position on REFUND receipt * **REFUND_ESCALATION** - Refund already refunded by a partial refund receipt due to an escalation.</br>Reduction of parent object item position on REFUND receipt * **REFUND_PARTIAL_AMOUNT_AFTER_SERVICE_CANCELLATION** - A partial refund already refunded after service could not fulfilled completely.</br>Reduction of parent object item and service position on REFUND receipt * **REFUND_CREDIT_CARD_DISPUTE** - Refund already refunded by a partial refund receipt due to dispute in CREDIT_CARD payment. Reduction of parent object item or service position on REFUND receipt
     *
     * @return $this
     */
    public function setPriceModificationType($price_modification_type)
    {
        $allowedValues = $this->getPriceModificationTypeAllowableValues();
        if (!in_array($price_modification_type, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'price_modification_type', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['price_modification_type'] = $price_modification_type;

        return $this;
    }

    /**
     * Gets details
     *
     * @return \cbdesk\otto\Client\Model\DetailsReceiptsV3
     */
    public function getDetails()
    {
        return $this->container['details'];
    }

    /**
     * Sets details
     *
     * @param \cbdesk\otto\Client\Model\DetailsReceiptsV3 $details details
     *
     * @return $this
     */
    public function setDetails($details)
    {
        $this->container['details'] = $details;

        return $this;
    }

    /**
     * Gets price_modification_amount
     *
     * @return \cbdesk\otto\Client\Model\PriceReceiptsV3
     */
    public function getPriceModificationAmount()
    {
        return $this->container['price_modification_amount'];
    }

    /**
     * Sets price_modification_amount
     *
     * @param \cbdesk\otto\Client\Model\PriceReceiptsV3 $price_modification_amount price_modification_amount
     *
     * @return $this
     */
    public function setPriceModificationAmount($price_modification_amount)
    {
        $this->container['price_modification_amount'] = $price_modification_amount;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
