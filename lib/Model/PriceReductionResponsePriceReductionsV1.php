<?php
/**
 * PriceReductionResponsePriceReductionsV1
 *
 * PHP version 5
 *
 * @category Class
 * @package  cbdesk\otto\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * OTTO Market API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.69
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace cbdesk\otto\Client\Model;

use ArrayAccess;
use cbdesk\otto\Client\ObjectSerializer;

/**
 * PriceReductionResponsePriceReductionsV1 Class Doc Comment
 *
 * @category Class
 * @package  cbdesk\otto\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class PriceReductionResponsePriceReductionsV1 implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'PriceReductionResponse__Price-Reductions-V1';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'sales_order_id' => 'string',
        'total_price_reduction' => 'AllOfPriceReductionResponsePriceReductionsV1TotalPriceReduction',
        'invoice_price' => 'AllOfPriceReductionResponsePriceReductionsV1InvoicePrice',
        'price_reductions' => '\cbdesk\otto\Client\Model\PriceReductionDetailPriceReductionsV1[]',
        'position_item_id' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'sales_order_id' => 'uuid',
        'total_price_reduction' => null,
        'invoice_price' => null,
        'price_reductions' => null,
        'position_item_id' => 'uuid'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'sales_order_id' => 'salesOrderId',
        'total_price_reduction' => 'totalPriceReduction',
        'invoice_price' => 'invoicePrice',
        'price_reductions' => 'priceReductions',
        'position_item_id' => 'positionItemId'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'sales_order_id' => 'setSalesOrderId',
        'total_price_reduction' => 'setTotalPriceReduction',
        'invoice_price' => 'setInvoicePrice',
        'price_reductions' => 'setPriceReductions',
        'position_item_id' => 'setPositionItemId'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'sales_order_id' => 'getSalesOrderId',
        'total_price_reduction' => 'getTotalPriceReduction',
        'invoice_price' => 'getInvoicePrice',
        'price_reductions' => 'getPriceReductions',
        'position_item_id' => 'getPositionItemId'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['sales_order_id'] = isset($data['sales_order_id']) ? $data['sales_order_id'] : null;
        $this->container['total_price_reduction'] = isset($data['total_price_reduction']) ? $data['total_price_reduction'] : null;
        $this->container['invoice_price'] = isset($data['invoice_price']) ? $data['invoice_price'] : null;
        $this->container['price_reductions'] = isset($data['price_reductions']) ? $data['price_reductions'] : null;
        $this->container['position_item_id'] = isset($data['position_item_id']) ? $data['position_item_id'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets sales_order_id
     *
     * @return string
     */
    public function getSalesOrderId()
    {
        return $this->container['sales_order_id'];
    }

    /**
     * Sets sales_order_id
     *
     * @param string $sales_order_id salesOrderId for an item
     *
     * @return $this
     */
    public function setSalesOrderId($sales_order_id)
    {
        $this->container['sales_order_id'] = $sales_order_id;

        return $this;
    }

    /**
     * Gets total_price_reduction
     *
     * @return AllOfPriceReductionResponsePriceReductionsV1TotalPriceReduction
     */
    public function getTotalPriceReduction()
    {
        return $this->container['total_price_reduction'];
    }

    /**
     * Sets total_price_reduction
     *
     * @param AllOfPriceReductionResponsePriceReductionsV1TotalPriceReduction $total_price_reduction sum of all the price reductions for a positionItemId.
     *
     * @return $this
     */
    public function setTotalPriceReduction($total_price_reduction)
    {
        $this->container['total_price_reduction'] = $total_price_reduction;

        return $this;
    }

    /**
     * Gets invoice_price
     *
     * @return AllOfPriceReductionResponsePriceReductionsV1InvoicePrice
     */
    public function getInvoicePrice()
    {
        return $this->container['invoice_price'];
    }

    /**
     * Sets invoice_price
     *
     * @param AllOfPriceReductionResponsePriceReductionsV1InvoicePrice $invoice_price the price of the positionItemId as per the invoice generated for the order.
     *
     * @return $this
     */
    public function setInvoicePrice($invoice_price)
    {
        $this->container['invoice_price'] = $invoice_price;

        return $this;
    }

    /**
     * Gets price_reductions
     *
     * @return \cbdesk\otto\Client\Model\PriceReductionDetailPriceReductionsV1[]
     */
    public function getPriceReductions()
    {
        return $this->container['price_reductions'];
    }

    /**
     * Sets price_reductions
     *
     * @param \cbdesk\otto\Client\Model\PriceReductionDetailPriceReductionsV1[] $price_reductions all price reductions applied for an item
     *
     * @return $this
     */
    public function setPriceReductions($price_reductions)
    {
        $this->container['price_reductions'] = $price_reductions;

        return $this;
    }

    /**
     * Gets position_item_id
     *
     * @return string
     */
    public function getPositionItemId()
    {
        return $this->container['position_item_id'];
    }

    /**
     * Sets position_item_id
     *
     * @param string $position_item_id positionItemId for an item
     *
     * @return $this
     */
    public function setPositionItemId($position_item_id)
    {
        $this->container['position_item_id'] = $position_item_id;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
