<?php
/**
 * ReturnShipmentReturnShipmentsV1
 *
 * PHP version 5
 *
 * @category Class
 * @package  cbdesk\otto\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * OTTO Market API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.69
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace cbdesk\otto\Client\Model;

use ArrayAccess;
use cbdesk\otto\Client\ObjectSerializer;

/**
 * ReturnShipmentReturnShipmentsV1 Class Doc Comment
 *
 * @category Class
 * @description A returnShipment with full details.
 * @package  cbdesk\otto\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ReturnShipmentReturnShipmentsV1 implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ReturnShipment__ReturnShipments-V1';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'return_shipment_id' => 'string',
        'created_at' => 'string',
        'tracking_key' => '\cbdesk\otto\Client\Model\TrackingKeyReturnShipmentsV1',
        'return_position_items' => '\cbdesk\otto\Client\Model\ReturnPositionItemReturnShipmentsV1[]',
        'states' => '\cbdesk\otto\Client\Model\ReturnShipmentStateReturnShipmentsV1[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'return_shipment_id' => null,
        'created_at' => null,
        'tracking_key' => null,
        'return_position_items' => null,
        'states' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'return_shipment_id' => 'returnShipmentId',
        'created_at' => 'createdAt',
        'tracking_key' => 'trackingKey',
        'return_position_items' => 'returnPositionItems',
        'states' => 'states'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'return_shipment_id' => 'setReturnShipmentId',
        'created_at' => 'setCreatedAt',
        'tracking_key' => 'setTrackingKey',
        'return_position_items' => 'setReturnPositionItems',
        'states' => 'setStates'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'return_shipment_id' => 'getReturnShipmentId',
        'created_at' => 'getCreatedAt',
        'tracking_key' => 'getTrackingKey',
        'return_position_items' => 'getReturnPositionItems',
        'states' => 'getStates'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['return_shipment_id'] = isset($data['return_shipment_id']) ? $data['return_shipment_id'] : null;
        $this->container['created_at'] = isset($data['created_at']) ? $data['created_at'] : null;
        $this->container['tracking_key'] = isset($data['tracking_key']) ? $data['tracking_key'] : null;
        $this->container['return_position_items'] = isset($data['return_position_items']) ? $data['return_position_items'] : null;
        $this->container['states'] = isset($data['states']) ? $data['states'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['return_shipment_id'] === null) {
            $invalidProperties[] = "'return_shipment_id' can't be null";
        }
        if ($this->container['created_at'] === null) {
            $invalidProperties[] = "'created_at' can't be null";
        }
        if ($this->container['tracking_key'] === null) {
            $invalidProperties[] = "'tracking_key' can't be null";
        }
        if ($this->container['return_position_items'] === null) {
            $invalidProperties[] = "'return_position_items' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets return_shipment_id
     *
     * @return string
     */
    public function getReturnShipmentId()
    {
        return $this->container['return_shipment_id'];
    }

    /**
     * Sets return_shipment_id
     *
     * @param string $return_shipment_id Internal returnShipment identifier assigned by OTTO Market.
     *
     * @return $this
     */
    public function setReturnShipmentId($return_shipment_id)
    {
        $this->container['return_shipment_id'] = $return_shipment_id;

        return $this;
    }

    /**
     * Gets created_at
     *
     * @return string
     */
    public function getCreatedAt()
    {
        return $this->container['created_at'];
    }

    /**
     * Sets created_at
     *
     * @param string $created_at created_at
     *
     * @return $this
     */
    public function setCreatedAt($created_at)
    {
        $this->container['created_at'] = $created_at;

        return $this;
    }

    /**
     * Gets tracking_key
     *
     * @return \cbdesk\otto\Client\Model\TrackingKeyReturnShipmentsV1
     */
    public function getTrackingKey()
    {
        return $this->container['tracking_key'];
    }

    /**
     * Sets tracking_key
     *
     * @param \cbdesk\otto\Client\Model\TrackingKeyReturnShipmentsV1 $tracking_key tracking_key
     *
     * @return $this
     */
    public function setTrackingKey($tracking_key)
    {
        $this->container['tracking_key'] = $tracking_key;

        return $this;
    }

    /**
     * Gets return_position_items
     *
     * @return \cbdesk\otto\Client\Model\ReturnPositionItemReturnShipmentsV1[]
     */
    public function getReturnPositionItems()
    {
        return $this->container['return_position_items'];
    }

    /**
     * Sets return_position_items
     *
     * @param \cbdesk\otto\Client\Model\ReturnPositionItemReturnShipmentsV1[] $return_position_items The position items included in the returnShipment.
     *
     * @return $this
     */
    public function setReturnPositionItems($return_position_items)
    {
        $this->container['return_position_items'] = $return_position_items;

        return $this;
    }

    /**
     * Gets states
     *
     * @return \cbdesk\otto\Client\Model\ReturnShipmentStateReturnShipmentsV1[]
     */
    public function getStates()
    {
        return $this->container['states'];
    }

    /**
     * Sets states
     *
     * @param \cbdesk\otto\Client\Model\ReturnShipmentStateReturnShipmentsV1[] $states The history of tracking states of the returnShipment
     *
     * @return $this
     */
    public function setStates($states)
    {
        $this->container['states'] = $states;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
